import sys,re
import numpy as np
import os.path
from os import listdir
from os.path import isfile, join

# Read the files with the output AUs generated by open face and parse them in 
# order to save the occurences, intensities and emotion label for each image
mypath = 'KDFE_AU'
onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]

# initialize output arrays
final_intens = np.empty([17])
final_occur = np.empty([18])
emotions = np.empty([1])

# emotion dictionary
em = dict([('AN',0),('AF',2),('DI',1),('HA',3),('NE',6),('SA',4),('SU',5)])


print('parsing files')
for filename in onlyfiles:

    if os.path.exists('{}/{}'.format(mypath,filename)):
    
        #parse the filename to get the emotion
        s = filename[4:6]
        c_emotion = em[s]
        
        
        data = open('{}/{}'.format(mypath,filename),'r').read()

        features = data[data.find("npoints")+len("npoints: 68\n{\n"):data.find("}\npose")]
        features = re.split('[\n]',features)
        features = features[:len(features)-1]
        
        intens = data[data.find("intensities")+len("intensities: 17 {"):data.find('}\nau occ')]
        occur =  data[data.find("occurences:")+len("occurences: 18 {"):]

        intens = re.split('[ \n]',intens)
        intens = intens[1:len(intens)-1]
        intens = intens[1::2]
        intens = list(map(float, intens))

        occur = re.split('[ \n]',occur)
        occur = occur[1:len(occur)-2]
        occur = occur[1::2]
        occur = list(map(float, occur))

        
        intens = np.array(intens)
        occur = np.array(occur)
        
        final_intens = np.vstack((final_intens,intens))
        final_occur = np.vstack((final_occur,occur))
        emotions = np.vstack((emotions,c_emotion))
        
    else:
        continue
        
final_intens = np.delete(final_intens,0,0)
final_occur = np.delete(final_occur,0,0)
emotions = np.delete(emotions,0,0)

print(final_intens)
print(final_intens.shape)

print(final_occur)
print(final_occur.shape)

print(emotions)
print(emotions.shape)


np.save('intens_kdfe.npy',final_intens)
np.save('occur_kdfe.npy',final_occur)
np.save('emotions_kdfe.npy',emotions)

